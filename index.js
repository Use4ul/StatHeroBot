require('dotenv').config(); // –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ .env
const express = require('express');
const logger = require('./logger'); // –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –ª–æ–≥–≥–µ—Ä–∞ (–µ—Å–ª–∏ –µ—Å—Ç—å)

const app = express();
const PORT = process.env.PORT || 3000;

// Middleware
app.use(express.json()); // –î–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞ JSON
app.use(express.urlencoded({ extended: true })); // –î–ª—è –¥–∞–Ω–Ω—ã—Ö –∏–∑ —Ñ–æ—Ä–º
app.use(express.static('public')); // –†–∞–∑–¥–∞—á–∞ —Å—Ç–∞—Ç–∏–∫–∏ (css, js, –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è)

// –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–æ–≤ (–µ—Å–ª–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω log4js)
app.use((req, res, next) => {
    logger?.info(`${req.method} ${req.url}`);
    next();
});

app.get('/api/data', (req, res) => {
    res.json({ message: '–î–∞–Ω–Ω—ã–µ API', timestamp: Date.now() });
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ 404 (–µ—Å–ª–∏ –º–∞—Ä—à—Ä—É—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω)
app.use((req, res) => {
    res.status(404).send('–°—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ üîç');
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
app.use((err, req, res, next) => {
    logger?.error('–û—à–∏–±–∫–∞:', err.message);
    res.status(500).send('–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ ‚ö†Ô∏è');
});

// –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
app.listen(PORT, () => {
    console.log(`–°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ http://localhost:${PORT}`);
    logger?.info(`–°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É ${PORT}`);
});
